"use strict";var myApp=angular.module("myApp",["ngRoute","ngResource","ngMaterial","ngMessages","ngCookies"]);myApp.config(["$mdThemingProvider",function(a){var b=a.extendPalette("deep-orange",{contrastDarkColors:["50","100","200","A100"]});a.definePalette("deepOrangeLight",b),a.theme("default").primaryPalette("blue-grey").accentPalette("deepOrangeLight")}]),myApp.config(["$httpProvider",function(a){a.interceptors.push("authHttpRequestInterceptor")}]),myApp.config(["$routeProvider",function(a){a.when("/index",{templateUrl:"assets/partials/index.html"}).when("/login",{templateUrl:"assets/partials/account/login.html",controller:"userCtrl"}).when("/signup",{templateUrl:"assets/partials/account/signup.html",controller:"userCtrl"}).when("/bestiary/view/:bestiaryId",{templateUrl:"assets/partials/bestiary/view.html",controller:"bestiaryCtrl",resolve:bestiaryCtrl.resolve}).when("/bestiary/list",{templateUrl:"assets/partials/bestiary/list.html",controller:"bestiaryCtrl",resolve:bestiaryCtrl.resolve}).when("/bestiary/add/:bestiaryId",{templateUrl:"assets/partials/creature/create.html",controller:"creatureCtrl",resolve:creatureCtrl.resolve}).when("/creature/view/:creatureId",{templateUrl:"assets/partials/creature/view.html",controller:"creatureCtrl",resolve:creatureCtrl.resolve}).when("/creature/edit/:creatureId",{templateUrl:"assets/partials/creature/create.html",controller:"creatureCtrl",resolve:creatureCtrl.resolve}).when("/creature/create",{templateUrl:"assets/partials/creature/create.html",controller:"creatureCtrl",resolve:creatureCtrl.resolve}).when("/account/newpassword",{templateUrl:"assets/partials/account/newpassword.html",controller:"updateUserCtrl",resolve:updateUserCtrl.resolve}).otherwise({redirectTo:"/bestiary/list"})}]);var bestiaryCtrl=function(a,b,c,d,e,f,g,h){a.bestiaries=f,a.bestiary=d,a.bestiary.creaturesLoading=!0;var i=function(){a.bestiary._id&&b.getAllForBestiary(a.bestiary._id,function(b){a.bestiary.creaturesLoading=!1,a.bestiary.creatures=b})};i(),a.unsavedBestiary={_id:d._id,name:d.name+"",description:d.description+""},a.creatureFilter={challengeRating:{min:{value:0,step:.125},max:{value:30,step:1},changed:function(a){a.value>1?a.step=1:a.value>.5?a.step=.5:a.value>.25?a.step=.25:a.step=.125,1.5==a.value?a.value=2:.75==a.value?a.value=1:.375==a.value&&(a.value=.5)}},filters:[{name:""}],addFilter:function(){a.creatureFilter.filters.push({name:""})},removeFilter:function(b){a.creatureFilter.filters.splice(b,1)},isCreatureShown:function(b){if(b.stats.challengeRating>=a.creatureFilter.challengeRating.min.value&&b.stats.challengeRating<=a.creatureFilter.challengeRating.max.value){for(var c=!0,d=0;d<a.creatureFilter.filters.length;d++){var e=a.creatureFilter.filters[d];if(e.name.length>0){if(-1!=b.name.toLowerCase().indexOf(e.name.toLowerCase())){c=!0;break}c=!1}}return c}return!1}},a.addCreature=function(){e.url("/bestiary/add/"+a.bestiary._id)},a.editCreature=function(a){e.url("/creature/edit/"+a._id)},a.copyCreature=function(c){var d=angular.copy(c);d._id=void 0,d.name=d.name+" Copy",b.create(d,function(b){a.editCreature(b)},function(a){console.log("error: "+a)})},a.deleteCreature=function(c,d){var e=h.confirm().title("Confirm Deletion").textContent("This creature will be permanently deleted. Would you like to proceed?").ariaLabel("Confirm Delete").targetEvent(c).ok("Delete").cancel("Cancel");h.show(e).then(function(){b["delete"](d._id);var c=a.bestiary.creatures.indexOf(d);-1!=c&&a.bestiary.creatures.splice(c,1)})},a.createBestiary=function(){var b=c.generateNewBestiary(g.user._id);c.create(b,function(b){a.goToBestiary(b._id)},function(a){console.log("error: "+a)})},a.deleteBestiary=function(b,d){var e=h.confirm().title("Confirm Deletion").textContent("This bestiary will be permanently deleted. Would you like to proceed?").ariaLabel("Confirm Delete").targetEvent(b).ok("Delete").cancel("Cancel");h.show(e).then(function(){c["delete"](d._id);var b=a.bestiaries.indexOf(d);-1!=b&&a.bestiaries.splice(b,1)})},a.doesBestiaryNeedEdits=function(a){return a.name==c.newBestiaryModel.name||a.description==c.newBestiaryModel.description},a.goToBestiary=function(a){e.url("/bestiary/view/"+a)},a.goToBestiaryList=function(){e.url("/bestiary/list")},a.cancelSave=function(){a.unsavedBestiary=a.bestiary},a.saveBestiaryInfo=function(){a.unsavedBestiary._id&&c.update(a.unsavedBestiary._id,a.unsavedBestiary,function(b){a.bestiary.name=b.name,a.bestiary.description=b.description},function(a){console.log("error: "+a)})},a.creatureApi={edit:a.editCreature,copy:a.copyCreature,"delete":a.deleteCreature}};bestiaryCtrl.$inject=["$scope","Creature","Bestiary","bestiary","$location","bestiaries","Auth","$mdDialog"],bestiaryCtrl.resolve={bestiary:["Bestiary","$q","$route","Auth","$location",function(a,b,c,d,e){if(c.current.params.bestiaryId){var f=b.defer();return d.executeOnLogin(function(){d.isLoggedIn()?a.get(c.current.params.bestiaryId,function(b){f.resolve(b),b.lastActive=new Date,a.update(b._id,b)},function(a){f.reject()}):(e.path("/login"),f.reject())}),f.promise}return{}}],bestiaries:["Bestiary","$q","$route","Auth","$location",function(a,b,c,d,e){if(void 0==c.current.params.bestiaryId){var f=b.defer();return d.executeOnLogin(function(){d.isLoggedIn()?a.getAllForUser(d.user._id,function(a){f.resolve(a)},function(a){f.reject()}):(e.path("/login"),f.reject())}),f.promise}return[]}]},angular.module("myApp").controller("bestiaryCtrl",bestiaryCtrl);var creatureCtrl=function(a,b,c,d,e,f,g,h,i){a.creature=b,a.creatureData=g,a.searchArray=function(a,b){var c=[];if(a&&b)for(var d=a.toLowerCase(),e=0;e<b.length;e++)-1!=b[e].toLowerCase().indexOf(d)&&c.push(b[e]);return c},a.challengeRating={step:.125,changed:function(){a.creature.stats&&a.creature.stats.challengeRating&&(a.creature.stats.challengeRating>1?a.challengeRating.step=1:a.creature.stats.challengeRating>.5?a.challengeRating.step=.5:a.creature.stats.challengeRating>.25?a.challengeRating.step=.25:a.challengeRating.step=.125,1.5==a.creature.stats.challengeRating?a.creature.stats.challengeRating=2:.75==a.creature.stats.challengeRating?a.creature.stats.challengeRating=1:.375==a.creature.stats.challengeRating&&(a.creature.stats.challengeRating=.5),a.creatureData.experienceByCR.hasOwnProperty(a.creature.stats.challengeRating)&&(a.creature.stats.experiencePoints=a.creatureData.experienceByCR[a.creature.stats.challengeRating]))}},a.savingThrows={isUsed:function(b){for(var c=0;c<a.creature.stats.savingThrows.length;c++)if(b.toLowerCase()==a.creature.stats.savingThrows[c].ability.toLowerCase())return!0;return!1},getUnused:function(b){if(!a.creature.stats||!a.creature.stats.savingThrows)return a.creatureData.abilities;for(var c=[],d=0;d<a.creatureData.abilities.length;d++){var e=!a.savingThrows.isUsed(a.creatureData.abilities[d]);(e||b.ability.toLowerCase()==a.creatureData.abilities[d].toLowerCase())&&c.push(a.creatureData.abilities[d])}return c},add:function(){a.creature.stats||(a.creature.stats={}),a.creature.stats.savingThrows||(a.creature.stats.savingThrows=[]);for(var b=0;b<a.creatureData.abilities.length;b++){var c=!a.savingThrows.isUsed(a.creatureData.abilities[b]);if(c){var d={ability:a.creatureData.abilities[b],proficient:!0};a.creature.stats.savingThrows.push(d);break}}},remove:function(b){var c=a.creature.stats.savingThrows.indexOf(b);-1!=c&&a.creature.stats.savingThrows.splice(c,1)}},a.skills={isUsed:function(b){for(var c=0;c<a.creature.stats.skills.length;c++)if(b.toLowerCase()==a.creature.stats.skills[c].name.toLowerCase())return!0;return!1},getUnused:function(b){if(!a.creature.stats||!a.creature.stats.skills)return a.creatureData.skills;for(var c=[],d=0;d<a.creatureData.skills.length;d++){var e=!a.skills.isUsed(a.creatureData.skills[d]);(e||b.name.toLowerCase()==a.creatureData.skills[d].toLowerCase())&&c.push(a.creatureData.skills[d])}return c},add:function(){a.creature.stats||(a.creature.stats={}),a.creature.stats.skills||(a.creature.stats.skills=[]);for(var b=0;b<a.creatureData.skills.length;b++){var c=!a.skills.isUsed(a.creatureData.skills[b]);if(c){var d={name:a.creatureData.skills[b],proficient:!0};a.creature.stats.skills.push(d);break}}},remove:function(b){var c=a.creature.stats.skills.indexOf(b);-1!=c&&a.creature.stats.skills.splice(c,1)}},a.abilities={addToList:function(a){var b={name:"",description:""};a.push(b)},removeFromList:function(a,b){var c=b.indexOf(a);-1!=c&&b.splice(c,1)}},a.race={changed:function(){var b=a.creature.stats.race;g.raceDefaults.hasOwnProperty(b)&&(a.creature.stats.size=g.raceDefaults[b].size,a.creature.stats.speed=g.raceDefaults[b].speed,a.creature.stats.senses=g.raceDefaults[b].senses,a.creature.stats.languages=g.raceDefaults[b].languages)}},a.$watch("creature.stats.race",function(b,c){c!=b&&a.race.changed()},!0),a.armorType={changed:function(){var b=a.creature.stats.armorType;if(g.armorTypeDefaults.hasOwnProperty(b)){var c=g.armorTypeDefaults[b],d=a.creature.stats.abilityScoreModifiers.dexterity;c.maxDex>-1&&(d=Math.min(d,c.maxDex)),a.creature.stats.armorClass=c.ac+d}}},a.$watch("creature.stats.armorType",function(b,c){c!=b&&a.armorType.changed()},!0),a.returnToBestiary=function(){a.creature._id?f.url("/bestiary/view/"+a.creature.bestiaryId):d.bestiaryId&&f.url("/bestiary/view/"+d.bestiaryId)},a.saveCreature=function(b){a.creature._id?c.update(a.creature._id,a.creature,b,function(a){console.log("error: "+a)}):(a.creature.bestiaryId=d.bestiaryId,c.create(a.creature,function(c){a.creature=c,b&&b()},function(a){console.log("error: "+a)}))},a.saveAndFinish=function(){a.saveCreature(a.returnToBestiary)},a.saveAndGoToBestiaryList=function(){a.saveCreature(function(){f.url("/bestiary/list")})},a.generateAttack=function(b){var c=h("sm")||h("xs");i.show({controller:generateAttackCtrl,templateUrl:"/assets/partials/creature/create-abilities-add-attack.html",parent:angular.element(document.body),targetEvent:b,clickOutsideToClose:!0,locals:{creature:a.creature},fullscreen:c}).then(function(b){b&&a.creature.stats.actions.push(b)})},a.$watch("creature",function(b,d){c.calculateCreatureDetails(a.creature)},!0)};creatureCtrl.$inject=["$scope","creature","Creature","$routeParams","Bestiary","$location","CreatureData","$mdMedia","$mdDialog"];var defaultCreature={name:"New Creature",flavor:{},stats:{size:"Medium",race:"Humanoid",alignment:"Unaligned",armorClass:10,numHitDie:1,proficiencyBonus:0,speed:"30 ft.",abilityScores:{strength:10,dexterity:10,constitution:10,intelligence:10,wisdom:10,charisma:10},savingThrows:[],skills:[],damageVulnerabilities:[],damageResistances:[],damageImmunities:[],conditionImmunities:[],senses:[],languages:["Common"],challengeRating:.125,experiencePoints:25,additionalAbilities:[],actions:[{name:"Shortsword",description:"<i>Melee Weapon Attack:</i> +0 to hit, reach 5 ft., one target. <i>Hit:</i> 3 (1d6 + 0) piercing damage."}],reactions:[]}};creatureCtrl.resolve={creature:["Creature","Bestiary","$q","$route","Auth","$location",function(a,b,c,d,e,f){var g=c.defer();return e.executeOnLogin(function(){e.isLoggedIn()?d.current.params.creatureId?a.get(d.current.params.creatureId,function(a){b.get(a.bestiaryId,function(b){a.bestiary=b,g.resolve(a)},function(a){g.reject()})},function(a){g.reject()}):d.current.params.bestiaryId?b.get(d.current.params.bestiaryId,function(a){var b=angular.copy(defaultCreature);b.bestiary=a,g.resolve(b)},function(a){g.reject()}):g.resolve(angular.copy(defaultCreature)):(f.path("/login"),g.reject())}),g.promise}]},angular.module("myApp").controller("creatureCtrl",creatureCtrl);var generateAttackCtrl=function(a,b,c,d){a.creatureData=c,a.attack={weapon:"",melee:!0,ranged:!1,reach:5,shortRange:80,longRange:320,damageType:"Slashing",damageDiceSize:6,damageDiceNum:1};var e=function(a,b,c,d){var e=Math.floor(c*(b/2))+d,f=e+" ("+c+"d"+b+" + "+d+") "+a+" damage";return f},f=function(a){var c="strength";(a.finesse||a.ranged&&!a.melee)&&b.stats.abilityScoreModifiers.dexterity>b.stats.abilityScoreModifiers.strength&&(c="dexterity");var d;d=a.melee&&a.ranged?"Melee or Ranged Weapon Attack:":a.melee?"Melee Weapon Attack:":a.ranged?"Ranged Weapon Attack:":"Weapon Attack:";var f,g=b.stats.abilityScoreModifiers[c]+b.stats.proficiencyBonus;a.melee&&a.ranged?f="reach "+a.reach+" ft. or range "+a.shortRange+"/"+a.longRange+" ft.":a.melee?f="reach "+a.reach+" ft.":a.ranged&&(f="range "+a.shortRange+"/"+a.longRange+" ft.");var h,i,j,k,l=b.stats.abilityScoreModifiers[c];a.melee&&(h=e(a.damageType,a.damageDiceSize,a.damageDiceNum,l)),a.ranged&&(i=e(a.rangedDamageType,a.rangedDamageDiceSize,a.rangedDamageDiceNum,l)),a.versatile&&(j=e(a.twoHandedDamageType,a.twoHandedDamageDiceSize,a.twoHandedDamageDiceNum,l)),a.bonusDamage&&(k=e(a.bonusDamageType,a.bonusDamageDiceSize,a.bonusDamageDiceNum,l));var m;a.melee?(m=h,a.ranged&&(m=m+" in melee, or "+i+" at range")):a.ranged&&(m=i),a.versatile&&(m=m+", or "+j+" if used with two hands to make a melee attack"),a.bonusDamage&&(m=m+", plus "+k);var n="<i>"+d+"</i> +"+g+" to hit, "+f+", one creature. <i>Hit:</i> "+m+".";return n};a.generateAttack=function(){var b={name:a.attack.weapon,description:f(a.attack)};d.hide(b)},a.cancel=function(){d.cancel()},a.searchArray=function(a,b){var c=[];if(a&&b)for(var d=a.toLowerCase(),e=0;e<b.length;e++)-1!=b[e].toLowerCase().indexOf(d)&&c.push(b[e]);return c},a.weapon={changed:function(){var b=a.attack.weapon;c.weaponTypeDefaults.hasOwnProperty(b)&&(a.attack=angular.copy(c.weaponTypeDefaults[b]),a.attack.weapon=b)}},a.$watch("attack.weapon",function(b,c){c!=b&&a.weapon.changed()},!0)};generateAttackCtrl.$inject=["$scope","creature","CreatureData","$mdDialog"];var headerCtrl=function(a,b){var c=["/assets/img/icons/dragon-head.svg","/assets/img/icons/ghost.svg","/assets/img/icons/orc-head.svg","/assets/img/icons/hanging-spider.svg","/assets/img/icons/minotaur.svg","/assets/img/icons/snail.svg"];a.logoIconPath=c[Math.floor(Math.random()*c.length)],a.logoStyle={"margin-top":"-55px"},b(function(){a.logoStyle={}},1e3)};headerCtrl.$inject=["$scope","$timeout"],angular.module("myApp").controller("headerCtrl",headerCtrl);var sideNavCtrl=function(a,b){a.close=function(a){b(a).close()},a.open=function(a){b(a).open()},a.toggle=function(a){b(a).toggle()},a.isOpen=function(a){return b(a).isOpen()}};sideNavCtrl.$inject=["$scope","$mdSidenav"],angular.module("myApp").controller("sideNavCtrl",sideNavCtrl);var userCtrl=function(a,b,c,d,e,f,g,h){a.user={rememberme:!0},a.getCurrentUser=function(){return d.user},a.createUser=function(){a.user.signupLoading=!0,b.create(a.user,function(b){d.login(a.user.username,a.user.password,!0,function(){var b=c.generateNewBestiary(d.user._id);b.name="Sample Bestiary",b.description="This is your first bestiary. It will contain any creatures that you can dream up!",c.create(b,function(b){a.user.signupLoading=!1,e.url("/bestiary/view/"+b._id)},function(a){console.log("error: "+a)})})},function(a){console.log("error: "+a)})},a.login=function(){d.login(a.user.username,a.user.password,a.user.rememberme,function(){e.url("/")},function(b){403==b.status?a.user.invalidPassword=a.user.password:a.user.invalidUsername=a.user.username})},a.logout=function(){d.logout(function(a){window.location.replace("/#/login"),window.location.reload()})},a.forgotPassword=function(a){var b=f("sm")||f("xs");g.show({controller:forgotPasswordCtrl,templateUrl:"/assets/partials/account/forgotpassword.html",parent:angular.element(document.body),targetEvent:a,clickOutsideToClose:!0,fullscreen:b}).then(function(a){a&&h.show(h.simple().textContent(a).hideDelay(5e3))})},a.goToChangePassword=function(){e.url("/account/newpassword")},a.goToSignup=function(){e.url("/signup")},a.goToLogin=function(){e.url("/login")}};userCtrl.$inject=["$scope","User","Bestiary","Auth","$location","$mdMedia","$mdDialog","$mdToast"],angular.module("myApp").controller("userCtrl",userCtrl);var updateUserCtrl=function(a,b,c,d,e){a.user=e,a.updateUser=function(){b.update(a.user._id,a.user,function(b){c.login(a.user.username,a.user.password,!0,function(){d.url("/")})},function(b){403==b.status&&(a.user.invalidPassword=a.user.currentPassword)})}};updateUserCtrl.$inject=["$scope","User","Auth","$location","user"],updateUserCtrl.resolve={user:function(a,b,c,d,e){var f=b.defer();return d.executeOnLogin(function(){d.isLoggedIn()?f.resolve(d.user):c.current.params.id?a.getPublic(c.current.params.id,function(a){c.current.params.password&&(a.currentPassword=c.current.params.password),f.resolve(a)},function(a){e.path("/login"),f.reject()}):(e.path("/login"),f.reject())}),f.promise}},angular.module("myApp").controller("updateUserCtrl",updateUserCtrl);var forgotPasswordCtrl=function(a,b,c){a.user={email:""},a.resetPassword=function(){b.resetPassword(a.user.email,function(){c.hide("An email has been sent to reset your password.")},function(){a.user.invalidEmail=a.user.email})},a.hide=function(){c.hide()},a.cancel=function(){c.cancel()}};forgotPasswordCtrl.$inject=["$scope","User","$mdDialog"];var compareNot=function(){return{require:"ngModel",scope:{otherModelValue:"=compareNot"},link:function(a,b,c,d){d.$validators.compareNot=function(b){return b!=a.otherModelValue},a.$watch("otherModelValue",function(){d.$validate()})}}};angular.module("myApp").directive("compareNot",compareNot);var compareTo=function(){return{require:"ngModel",scope:{otherModelValue:"=compareTo"},link:function(a,b,c,d){d.$validators.compareTo=function(b){return b==a.otherModelValue},a.$watch("otherModelValue",function(){d.$validate()})}}};angular.module("myApp").directive("compareTo",compareTo);var expandTextarea=function(){return{link:function(a,b,c){b.on("focus",function(){b.triggerHandler("keydown")})}}};angular.module("myApp").directive("expandTextarea",expandTextarea),angular.module("myApp").directive("ngStatBlock",[function(){return{restrict:"E",scope:{creature:"=creature",size:"=size",creatureApi:"=creatureApi"},link:function(a,b,c){var d=function(){"preview"==c.size?a.contentUrl="assets/partials/statBlockPreview.html":"mini"==c.size?a.contentUrl="assets/partials/statBlockMini.html":a.contentUrl="assets/partials/statBlock.html"};d(),c.$observe("size",function(a){d()})},template:'<div ng-include="contentUrl"></div>'}}]),angular.module("myApp").directive("uniqueEmail",["$http","$q",function(a,b){return{require:"ngModel",link:function(c,d,e,f){f.$asyncValidators.uniqueEmail=function(c){return a.get("/api/users/search?email="+c).then(function(){return b.reject("exists")},function(){return!0})}}}}]),angular.module("myApp").directive("uniqueUsername",["$http","$q",function(a,b){return{require:"ngModel",link:function(c,d,e,f){f.$asyncValidators.uniqueUsername=function(c){return a.get("/api/users/search?username="+c).then(function(){return b.reject("exists")},function(){return!0})}}}}]),angular.module("myApp").factory("Auth",["$cookies","$http","$location","authHttpRequestInterceptor",function(a,b,c,d){var e={},f=!1,g=[];return e.isLoggedIn=function(){return void 0!=e.user},e.login=function(c,f,g,h,i){if(c||(c=a.get("bestiarymanagerusername")),c){var j={username:c,password:f,rememberme:g};b.post("/api/authenticate",j).then(function(a){d.token=a.data,b.get("/api/authenticate/user").then(function(a){e.user=a.data,h&&h()},function(a){i&&i(a)})},function(a){i&&i(a),token=void 0})}else i("Unable to find user")},e.login(void 0,void 0,void 0,function(){f=!0;for(var a=0;a<g.length;a++)g[a]()},function(){f=!0;for(var a=0;a<g.length;a++)g[a]()}),e.executeOnLogin=function(a){f?setTimeout(a):g.push(a)},e.logout=function(a,c){b.post("/api/revokeauthentication",{}).then(function(b){e.user=void 0,a(b.data)},function(a){c(a)})},e}]),angular.module("myApp").factory("authHttpRequestInterceptor",[function(){var a={};return a.token=void 0,a.request=function(b){return a.token&&(b.headers["x-access-token"]=a.token),b},a}]),angular.module("myApp").factory("Bestiary",["$resource","$sce","CachedResourceAPI",function(a,b,c){var d=new c("/api/bestiaries/:id"),e=void 0;return d.getAllForUser=function(b,c,d){if(void 0==e||e!=b)e=b,a("/api/users/:id/bestiaries").query({id:b},function(a){for(var b=0;b<a.length;b++)this.cache.add(a[b]._id,a[b]);c&&c(a)}.bind(this),d);else{for(var f=this.cache.getAll(),g=[],h=0;h<f.length;h++)f[h].ownerId==b&&g.push(f[h]);setTimeout(function(){c(g)})}},d.newBestiaryModel={name:"New Bestiary",description:""},d.generateNewBestiary=function(a){if(a){var b=angular.copy(d.newBestiaryModel);return b.ownerId=a,b}throw"Parameter userId not found"},d}]),angular.module("myApp").factory("Cache",function(){function a(){var a={};this.add=function(b,c){a[b]=c},this.get=function(b){return a[b]},this.getAll=function(){var b=[];for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&b.push(a[c]);return b},this.remove=function(b){delete a[b]},this.has=function(b){return a.hasOwnProperty(b)},this.isEmpty=function(){return 0==Object.keys(a).length},this.clear=function(){a={}}}return a}),angular.module("myApp").factory("CachedResourceAPI",["$resource","$sce","Cache",function(a,b,c){function d(b){this.cache=new c,this.api=a(b,{id:"@id"},{update:{method:"PUT"}})}return d.prototype.get=function(a,b,c){this.cache.has(a)?b&&setTimeout(function(){b(this.cache.get(a))}.bind(this)):this.api.get({id:a},function(c){this.cache.add(a,c),b&&b(c)}.bind(this),c)},d.prototype.getAll=function(a,b){this.cache.isEmpty()?this.api.query(function(b){for(var c=0;c<b.length;c++)this.cache.add(b[c]._id,b[c]);a&&a(b)}.bind(this),b):a&&setTimeout(function(){a(this.cache.getAll())}.bind(this))},d.prototype.create=function(a,b,c){this.api.save(a,function(a){this.cache.add(a._id,a),b(a)}.bind(this),c)},d.prototype.update=function(a,b,c,d){this.api.update({id:a},b,function(a){this.cache.add(a._id,a),c&&c(a)}.bind(this),d)},d.prototype["delete"]=function(a,b,c){this.api["delete"]({id:a},function(c){this.cache.remove(a),b&&b(c)}.bind(this),c)},d}]),angular.module("myApp").factory("Creature",["$resource","$sce","CachedResourceAPI",function(a,b,c){var d=new c("/api/creatures/:id"),e={Fine:4,Diminutive:4,Tiny:4,Small:6,Medium:8,Large:10,Huge:12,Gargantuan:20,Colossal:20,"Colossal+":20},f={strength:"Str",dexterity:"Dex",constitution:"Con",intelligence:"Int",wisdom:"Wis",charisma:"Cha"},g={Acrobatics:"dexterity","Animal Handling":"wisdom",Arcana:"intelligence",Athletics:"strength",Deception:"charisma",History:"intelligence",Insight:"wisdom",Intimidation:"charisma",Investigation:"intelligence",Medicine:"wisdom",Nature:"intelligence",Perception:"wisdom",Performance:"charisma",Persuasion:"charisma",Religion:"intelligence","Sleight of Hand":"dexterity",Stealth:"dexterity",Survival:"wisdom"},h=function(a){return Math.floor((a-10)/2)};d.calculateCreatureDetails=function(a){if(a.stats&&a.stats.armorType&&(""==a.stats.armorType?a.stats.armorTypeStr="":a.stats.armorTypeStr="("+a.stats.armorType+")"),a.stats&&a.stats.abilityScores){a.stats.abilityScoreModifiers={},a.stats.abilityScoreStrs={};for(var c in a.stats.abilityScores)if(a.stats.abilityScores.hasOwnProperty(c)){a.stats.abilityScoreModifiers[c]=h(a.stats.abilityScores[c]);var d="+";a.stats.abilityScoreModifiers[c]<0&&(d="–"),a.stats.abilityScoreStrs[c]=a.stats.abilityScores[c]+" ("+d+Math.abs(a.stats.abilityScoreModifiers[c])+")"}}if(a.stats&&a.stats.size&&a.stats.abilityScoreModifiers&&a.stats.numHitDie){a.stats.hitDieSize=e[a.stats.size],a.stats.extraHealthFromConstitution=a.stats.abilityScoreModifiers.constitution*a.stats.numHitDie,a.stats.hitPoints=Math.floor(a.stats.numHitDie*(a.stats.hitDieSize/2+.5+a.stats.abilityScoreModifiers.constitution));var d="+";a.stats.extraHealthFromConstitution<0&&(d="–"),a.stats.hitPointsStr=a.stats.hitPoints+" ("+a.stats.numHitDie+"d"+a.stats.hitDieSize+" "+d+" "+Math.abs(a.stats.extraHealthFromConstitution)+")"}if(a.stats&&a.stats.additionalAbilities)for(var i in a.stats.additionalAbilities){var j=a.stats.additionalAbilities[i];j.descriptionHtml=b.trustAsHtml(j.description)}if(a.stats&&a.stats.actions)for(var i in a.stats.actions){var j=a.stats.actions[i];j.descriptionHtml=b.trustAsHtml(j.description)}if(a.stats&&a.stats.reactions)for(var i in a.stats.reactions){var j=a.stats.reactions[i];j.descriptionHtml=b.trustAsHtml(j.description)}if(a.flavor&&void 0!=a.flavor.description&&(a.flavor.descriptionHtml=b.trustAsHtml(a.flavor.description)),a.stats&&a.stats.savingThrows&&a.stats.abilityScoreModifiers&&void 0!=a.stats.proficiencyBonus)for(var i in a.stats.savingThrows){var k=a.stats.savingThrows[i],l=a.stats.abilityScoreModifiers[k.ability];k.value?l=k.value:k.proficient&&(l+=a.stats.proficiencyBonus),k.modifier=l;var d="+";0>l&&(d="–"),k.modifierStr=f[k.ability]+" "+d+Math.abs(l)}if(a.stats&&a.stats.skills&&a.stats.abilityScoreModifiers&&void 0!=a.stats.proficiencyBonus)for(var i in a.stats.skills){var m=a.stats.skills[i],j=g[m.name],l=a.stats.abilityScoreModifiers[j];m.value?l=m.value:m.proficient&&(l+=a.stats.proficiencyBonus),m.modifier=l;var d="+";0>l&&(d="–"),m.modifierStr=m.name+" "+d+Math.abs(l)}if(a.stats&&a.stats.senses&&a.stats.abilityScoreModifiers){var l=a.stats.abilityScoreModifiers.wisdom;if(a.stats.skills)for(var i in a.stats.skills)if("Perception"==a.stats.skills[i].name){l=a.stats.skills[i].modifier;break}a.stats.passivePerception=10+l}a.stats&&void 0!=a.stats.challengeRating&&(.125==a.stats.challengeRating?a.stats.challengeRatingStr="1/8":.25==a.stats.challengeRating?a.stats.challengeRatingStr="1/4":.5==a.stats.challengeRating?a.stats.challengeRatingStr="1/2":a.stats.challengeRatingStr=a.stats.challengeRating.toString())},d.get=function(a,b,e){c.prototype.get.call(this,a,function(a){d.calculateCreatureDetails(a),b&&b(a)},e)},delete[d.getAll],d.update=function(a,b,e,f){c.prototype.update.call(this,a,b,function(a){d.calculateCreatureDetails(a),e&&e(a)},f)};var i=void 0;return d.getAllForBestiary=function(b,c,e){if(void 0==i||i!=b)i=b,this.cache.clear(),a("/api/bestiaries/:id/creatures").query({id:b},function(a){for(var b=0;b<a.length;b++)this.cache.add(a[b]._id,a[b]),d.calculateCreatureDetails(a[b]);c&&c(a)}.bind(this),e);else{for(var f=this.cache.getAll(),g=[],h=0;h<f.length;h++)f[h].bestiaryId==b&&g.push(f[h]);setTimeout(function(){c(g)})}},d}]),angular.module("myApp").factory("CreatureData",function(){var a={};return a.sizes=["Fine","Diminutive","Tiny","Small","Medium","Large","Huge","Gargantuan","Colossal","Colossal+"],a.races=["Dwarf","Hill Dwarf","Elf","High Elf","Halfling","Lightfoot Halfling","Human","Dragonborn","Gnome","Half-Elf","Half-Orc","Tiefling","Abberation","Beast","Celestial","Construct","Dragon","Elemental","Fey","Fiend","Giant","Humanoid","Monstrosity","Ooze","Plant","Undead"],a.alignments=["Unaligned","Lawful Good","Lawful Neutral","Lawful Evil","Neutral Good","Neutral","Neutral Evil","Chaotic Good","Chaotic Neutral","Chaotic Evil"],a.armorTypes=["Natural Armor","Padded","Leather","Studded leather","Hide","Chain shirt","Scale mail","Breastplate","Half plate","Ring mail","Chain mail","Splint","Plate"],a.abilities=["strength","dexterity","constitution","intelligence","wisdom","charisma"],a.skills=["Acrobatics","Animal Handling","Arcana","Athletics","Deception","History","Insight","Intimidation","Investigation","Medicine","Nature","Perception","Performance","Persuasion","Religion","Sleight of Hand","Stealth","Survival"],a.damageTypes=["Slashing","Piercing","Bludgeoning","Acid","Fire","Cold","Poison","Necrotic","Radiant","Lightning","Psychic","Thunder","Force"],a.languages=["Common","Dwarvish","Elvish","Giant","Gnomish","Goblin","Halfling","Orc","Abyssal","Celestial","Draconic","Deep Speech","Infernal","Primordial","Sylvan","Undercommon"],a.negativeConditions=["Blinded","Charmed","Deafened","Encumbered","Exhaustion","Frightened","Intoxicated","Paralyzed","Poisoned","Prone","Restrained","Stunned","Unconscious"],a.attackTypes=["Melee Weapon Attack","Ranged Weapon Attack","Melee or Ranged Weapon Attack","Melee Spell Attack","Ranged Spell Attack"],a.experienceByCR={"0.0":10,.125:25,.25:50,.5:100,1:200,2:450,3:700,4:1100,5:1800,6:2300,7:2900,8:3900,9:5e3,10:5900,11:7200,12:8400,13:1e4,14:11500,15:13e3,16:15e3,17:18e3,18:2e4,19:22e3,20:25e3,21:33e3,22:41e3,23:5e4,24:62e3,25:75e3,26:9e4,27:105e3,28:12e4,29:135e3,30:155e3},a.weaponTypes=["Club","Dagger","Greatclub","Handaxe","Javelin","Light hammer","Mace","Quarterstaff","Sickle","Spear","Crossbow, light","Dart","Shortbow","Sling","Battleaxe","Flail","Glaive","Greataxe","Greatsword","Halberd","Lance","Longsword","Maul","Morningstar","Pike","Rapier","Scimitar","Shortsword","Trident","War pick","Warhammer","Whip","Blowgun","Crossbow, hand","Crossbow, heavy","Longbow","Net"],a.raceDefaults={Dwarf:{size:"Medium",speed:"25 ft.",senses:["Darkvision 60ft."],languages:["Common","Dwarvish"]},"Hill Dwarf":{size:"Medium",speed:"25 ft.",senses:["Darkvision 60ft."],languages:["Common","Dwarvish"]},Elf:{size:"Medium",speed:"30 ft.",senses:["Darkvision 60ft."],languages:["Common","Elvish"]},"High Elf":{size:"Medium",speed:"30 ft.",senses:["Darkvision 60ft."],languages:["Common","Elvish"]},Halfling:{size:"Small",speed:"25 ft.",senses:[],languages:["Common","Halfling"]},"Lightfoot Halfling":{size:"Small",speed:"25 ft.",senses:[],languages:["Common","Halfling"]},Human:{size:"Medium",speed:"30 ft.",senses:[],languages:["Common"]},Dragonborn:{size:"Medium",speed:"30 ft.",senses:[],languages:["Common","Draconic"]},Gnome:{size:"Small",speed:"25 ft.",senses:["Darkvision 60ft."],languages:["Common","Gnomish"]},"Half-Elf":{size:"Medium",speed:"30 ft.",senses:["Darkvision 60ft."],languages:["Common","Elvish"]},"Half-Orc":{size:"Medium",speed:"30 ft.",senses:["Darkvision 60ft."],languages:["Common","Orc"]},Tiefling:{size:"Medium",speed:"30 ft.",senses:["Darkvision 60ft."],languages:["Common","Infernal"]}},a.armorTypeDefaults={Padded:{ac:11,maxDex:-1},Leather:{ac:11,maxDex:-1},"Studded leather":{ac:12,maxDex:-1},Hide:{ac:12,maxDex:2},"Chain shirt":{ac:13,maxDex:2},"Scale mail":{ac:14,maxDex:2},Breastplate:{ac:14,maxDex:2},"Half plate":{ac:15,maxDex:2},"Ring mail":{ac:14,maxDex:0},"Chain mail":{ac:16,maxDex:0},Splint:{ac:17,maxDex:0},Plate:{ac:18,maxDex:0}},a.weaponTypeDefaults={Club:{melee:!0,reach:5,damageType:"Bludgeoning",damageDiceNum:1,damageDiceSize:4},Dagger:{melee:!0,reach:5,finesse:!0,ranged:!0,shortRange:20,longRange:60,damageType:"Piercing",damageDiceNum:1,damageDiceSize:4,rangedDamageType:"Piercing",rangedDamageDiceNum:1,rangedDamageDiceSize:4},Greatclub:{melee:!0,reach:5,damageType:"Bludgeoning",damageDiceNum:1,damageDiceSize:8},Handaxe:{melee:!0,reach:5,ranged:!0,shortRange:20,longRange:60,damageType:"Slashing",damageDiceNum:1,damageDiceSize:6,rangedDamageType:"Slashing",rangedDamageDiceNum:1,rangedDamageDiceSize:6},Javelin:{melee:!0,reach:5,ranged:!0,shortRange:30,longRange:120,damageType:"Piercing",damageDiceNum:1,damageDiceSize:6,rangedDamageType:"Piercing",rangedDamageDiceNum:1,rangedDamageDiceSize:6},"Light hammer":{melee:!0,reach:5,ranged:!0,shortRange:20,longRange:60,damageType:"Bludgeoning",damageDiceNum:1,damageDiceSize:4,rangedDamageType:"Bludgeoning",rangedDamageDiceNum:1,rangedDamageDiceSize:4},Mace:{melee:!0,reach:5,damageType:"Bludgeoning",damageDiceNum:1,damageDiceSize:6},Quarterstaff:{melee:!0,reach:5,veratile:!0,damageType:"Bludgeoning",damageDiceNum:1,damageDiceSize:6,twoHandedDamageType:"Bludgeoning",twoHandedDamageDiceNum:1,twoHandedDamageDiceSize:8},Sickle:{melee:!0,reach:5,damageType:"Slashing",damageDiceNum:1,damageDiceSize:4},Spear:{melee:!0,reach:5,ranged:!0,shortRange:20,longRange:60,versatile:!0,damageType:"Piercing",damageDiceNum:1,damageDiceSize:6,rangedDamageType:"Piercing",rangedDamageDiceNum:1,rangedDamageDiceSize:6,twoHandedDamageType:"Piercing",twoHandedDamageDiceNum:1,twoHandedDamageDiceSize:8},"Crossbow, light":{ranged:!0,shortRange:80,longRange:320,damageType:"Piercing",rangedDamageDiceNum:1,rangedDamageDiceSize:8},Dart:{ranged:!0,shortRange:20,longRange:60,damageType:"Piercing",rangedDamageDiceNum:1,rangedDamageDiceSize:4},Shortbow:{ranged:!0,shortRange:80,longRange:320,damageType:"Piercing",rangedDamageDiceNum:1,rangedDamageDiceSize:6},Sling:{ranged:!0,shortRange:30,longRange:120,damageType:"Bludgeoning",
rangedDamageDiceNum:1,rangedDamageDiceSize:4},Battleaxe:{melee:!0,reach:5,versatile:!0,damageType:"Slashing",damageDiceNum:1,damageDiceSize:8,twoHandedDamageType:"Slashing",twoHandedDamageDiceNum:1,twoHandedDamageDiceSize:10},Flail:{melee:!0,reach:5,damageType:"Bludgeoning",damageDiceNum:1,damageDiceSize:8},Glaive:{melee:!0,reach:10,damageType:"Slashing",damageDiceNum:1,damageDiceSize:10},Greataxe:{melee:!0,reach:5,damageType:"Slashing",damageDiceNum:1,damageDiceSize:12},Greatsword:{melee:!0,reach:5,damageType:"Slashing",damageDiceNum:2,damageDiceSize:6},Halberd:{melee:!0,reach:10,damageType:"Slashing",damageDiceNum:1,damageDiceSize:10},Longsword:{melee:!0,reach:5,versatile:!0,damageType:"Slashing",damageDiceNum:1,damageDiceSize:8,twoHandedDamageType:"Slashing",twoHandedDamageDiceNum:1,twoHandedDamageDiceSize:10},Maul:{melee:!0,reach:5,damageType:"Bludgeoning",damageDiceNum:2,damageDiceSize:6},Morningstar:{melee:!0,reach:5,damageType:"Piercing",damageDiceNum:1,damageDiceSize:8},Pike:{melee:!0,reach:10,damageType:"Piercing",damageDiceNum:1,damageDiceSize:10},Rapier:{melee:!0,reach:5,finesse:!0,damageType:"Piercing",damageDiceNum:1,damageDiceSize:8},Scimitar:{melee:!0,reach:5,finesse:!0,damageType:"Slashing",damageDiceNum:1,damageDiceSize:6},Shortsword:{melee:!0,reach:5,finesse:!0,damageType:"Piercing",damageDiceNum:1,damageDiceSize:6},Trident:{melee:!0,reach:5,ranged:!0,shortRange:20,longRange:60,versatile:!0,damageType:"Piercing",damageDiceNum:1,damageDiceSize:6,rangedDamageType:"Piercing",rangedDamageDiceNum:1,rangedDamageDiceSize:6,twoHandedDamageType:"Piercing",twoHandedDamageDiceNum:1,twoHandedDamageDiceSize:8},"War pick":{melee:!0,reach:5,damageType:"Piercing",damageDiceNum:1,damageDiceSize:8},Warhammer:{melee:!0,reach:5,versatile:!0,damageType:"Bludgeoning",damageDiceNum:1,damageDiceSize:8,twoHandedDamageType:"Bludgeoning",twoHandedDamageDiceNum:1,twoHandedDamageDiceSize:10},Whip:{melee:!0,reach:10,finesse:!0,damageType:"Slashing",damageDiceNum:1,damageDiceSize:4},Blowgun:{ranged:!0,shortRange:25,longRange:100,damageType:"Piercing",rangedDamageDiceNum:1,rangedDamageDiceSize:1},"Crossbow, hand":{ranged:!0,shortRange:30,longRange:120,damageType:"Piercing",rangedDamageDiceNum:1,rangedDamageDiceSize:6},"Crossbow, heavy":{ranged:!0,shortRange:100,longRange:400,damageType:"Piercing",rangedDamageDiceNum:1,rangedDamageDiceSize:10},Longbow:{ranged:!0,shortRange:150,longRange:600,damageType:"Piercing",rangedDamageDiceNum:1,rangedDamageDiceSize:8}},a}),angular.module("myApp").factory("User",["$resource","$sce","CachedResourceAPI",function(a,b,c){var d={};return d=new c("/api/users/:id"),d.getPublic=function(b,c,d){a("/api/users/:id/public").get({id:b},c,d)},d.resetPassword=function(b,c,d){var e={email:b};a("/api/users/resetpassword").save(e,c,d)},d}]);